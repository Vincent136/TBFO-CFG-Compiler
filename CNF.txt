START -> START NEWLINE | START A1 | VARIABLE E1 | VARIABLE F1 | VARIABLE G1 | VARIABLE H1 | VARIABLE I1 | QQQ U1 | PPP VARIABLE | PPP W1 | NNN X1 | NNN Y1 | EEEE B1 | DDDD C1 | LLL AA1 | LLL BB1 | III GG1 | III HH1 | HHH II1 | GGG JJ1 | DEF RETURN | FFF KK1 | FFF LL1 | FFF MM1 | AAA PP1 | XX TT1 | FFFF CSTRING
A1 -> NEWLINE START
NEWLINE -> $
FFFF -> #
LINECOM -> FFFF CSTRING
EEEE -> "
COMMENT -> EEEE B1 | DDDD C1
B1 -> EEEE B2
B2 -> EEEE B3
B3 -> COMBODY B4
B4 -> EEEE B5
B5 -> EEEE EEEE
DDDD -> '
C1 -> DDDD C2
C2 -> DDDD C3
C3 -> COMBODY C4
C4 -> DDDD C5
C5 -> DDDD DDDD
COMBODY -> COMBODY D1 | COMBODY NEWLINE | string | CSTRING CSTRING
D1 -> NEWLINE COMBODY
CCCC -> =
ASSCLAUSE -> VARIABLE E1 | VARIABLE F1 | VARIABLE G1 | VARIABLE H1 | VARIABLE I1
E1 -> CCCC VARVAL
F1 -> OPS F2
F2 -> CCCC VARVAL
G1 -> OPS G2
G2 -> CCCC VARVAL
H1 -> OPS H2
H2 -> CCCC VARVAL
I1 -> OPS I2
I2 -> CCCC VARVAL
VARIABLE -> variable
VARVAL -> number | VARVAL J1 | VARVAL K1 | AAAA L1 | variable | EEEE Q1 | DDDD R1 | STRING T1 | True | False | BOOL M1 | BOOL N1 | WWW BOOL | VARVAL O1 | VARVAL P1 | YY QQ1 | YY RR1 | TYPE SS1
J1 -> OPS VARVAL
BBBB -> ,
K1 -> BBBB VARVAL
AAAA -> (
ZZZ -> )
L1 -> VARVAL ZZZ
BOOL -> True | False | BOOL M1 | BOOL N1 | WWW BOOL | VARVAL O1 | VARVAL P1
YYY -> and
M1 -> YYY BOOL
XXX -> or
N1 -> XXX BOOL
WWW -> not
UUU -> is
O1 -> UUU VARVAL
P1 -> RELOPS VARVAL
TTT -> >
RELOPS -> TTT CCCC | SSS CCCC | RRR CCCC | CCCC CCCC | TTT | SSS
SSS -> <
RRR -> !
OPS -> + | - | / | * | % | ^ | SSS SSS | TTT TTT
STRING -> EEEE Q1 | DDDD R1 | STRING T1
Q1 -> CSTRING EEEE
R1 -> CSTRING DDDD
T1 -> OPS STRING
CSTRING -> string | CSTRING CSTRING
QQQ -> print
PRINT -> QQQ U1
U1 -> AAAA U2
U2 -> VARVAL ZZZ
PPP -> import
IMPORT -> PPP VARIABLE | PPP W1
OOO -> as
W1 -> VARIABLE W2
W2 -> OOO VARIABLE
NNN -> from
FROM -> NNN X1 | NNN Y1
X1 -> VARIABLE IMPORT
Y1 -> VARIABLE Y2
Y2 -> PPP OPS
BODY -> BODY BODY | variable
IFBODY -> IFBODY NEWLINE | IFBODY Z1 | VARIABLE E1 | VARIABLE F1 | VARIABLE G1 | VARIABLE H1 | VARIABLE I1 | QQQ U1 | PPP VARIABLE | PPP W1 | NNN X1 | NNN Y1 | EEEE B1 | DDDD C1 | LLL AA1 | LLL BB1 | KKK CC1 | KKK DD1 | JJJ EE1 | III GG1 | III HH1 | GGG JJ1 | DEF RETURN | FFF KK1 | FFF LL1 | FFF MM1 | AAA PP1 | XX TT1 | FFFF CSTRING | break | pass | continue
Z1 -> NEWLINE IFBODY
MMM -> :
LLL -> if
IF -> LLL AA1 | LLL BB1
AA1 -> BOOL AA2
AA2 -> MMM AA3
AA3 -> NEWLINE IFBODY
BB1 -> AAAA BB2
BB2 -> BOOL BB3
BB3 -> ZZZ BB4
BB4 -> MMM BB5
BB5 -> NEWLINE IFBODY
KKK -> elif
ELIF -> KKK CC1 | KKK DD1
CC1 -> BOOL CC2
CC2 -> MMM CC3
CC3 -> NEWLINE IFBODY
DD1 -> AAAA DD2
DD2 -> BOOL DD3
DD3 -> ZZZ DD4
DD4 -> MMM DD5
DD5 -> NEWLINE IFBODY
JJJ -> else
ELSE -> JJJ EE1
EE1 -> MMM EE2
EE2 -> NEWLINE START
LOOPBODY -> LOOPBODY FF1 | VARIABLE E1 | VARIABLE F1 | VARIABLE G1 | VARIABLE H1 | VARIABLE I1 | QQQ U1 | PPP VARIABLE | PPP W1 | NNN X1 | NNN Y1 | EEEE B1 | DDDD C1 | LLL AA1 | LLL BB1 | III GG1 | III HH1 | HHH II1 | GGG JJ1 | DEF RETURN | FFF KK1 | FFF LL1 | FFF MM1 | AAA PP1 | XX TT1 | FFFF CSTRING | break | pass | continue
FF1 -> NEWLINE LOOPBODY
III -> while
WHILE -> III GG1 | III HH1
GG1 -> BOOL GG2
GG2 -> MMM GG3
GG3 -> NEWLINE LOOPBODY
HH1 -> AAAA HH2
HH2 -> BOOL HH3
HH3 -> ZZZ HH4
HH4 -> MMM HH5
HH5 -> NEWLINE LOOPBODY
HHH -> class
CLASS -> HHH II1
II1 -> VARIABLE II2
II2 -> MMM II3
II3 -> NEWLINE START
GGG -> def
DEF -> GGG JJ1 | DEF RETURN
JJ1 -> VARIABLE JJ2
JJ2 -> AAAA JJ3
JJ3 -> VARVAL JJ4
JJ4 -> ZZZ JJ5
JJ5 -> MMM JJ6
JJ6 -> NEWLINE START
RETURN -> RETURN VARVAL | return
FFF -> for
EEE -> in
FOR -> FFF KK1 | FFF LL1 | FFF MM1
KK1 -> VARIABLE KK2
KK2 -> EEE KK3
KK3 -> STRING KK4
KK4 -> MMM KK5
KK5 -> NEWLINE LOOPBODY
LL1 -> VARIABLE LL2
LL2 -> EEE LL3
LL3 -> LIST LL4
LL4 -> MMM LL5
LL5 -> NEWLINE LOOPBODY
MM1 -> VARIABLE MM2
MM2 -> EEE MM3
MM3 -> RANGE MM4
MM4 -> MMM MM5
MM5 -> NEWLINE LOOPBODY
DDD -> [
CCC -> ]
LIST -> DDD NN1
NN1 -> VARVAL CCC
BBB -> range
RANGE -> BBB OO1
OO1 -> AAAA OO2
OO2 -> VARVAL ZZZ
AAA -> with
ZZ -> open
WITH -> AAA PP1
PP1 -> ZZ PP2
PP2 -> AAAA PP3
PP3 -> VARVAL PP4
PP4 -> ZZZ PP5
PP5 -> OOO PP6
PP6 -> VARIABLE PP7
PP7 -> MMM PP8
PP8 -> NEWLINE START
TYPE -> str | int | float | double
YY -> input
INPUT -> YY QQ1 | YY RR1 | TYPE SS1
QQ1 -> AAAA ZZZ
RR1 -> AAAA RR2
RR2 -> VARVAL ZZZ
SS1 -> AAAA SS2
SS2 -> INPUT ZZZ
BREAK -> break
PASS -> pass
CONTINUE -> continue
XX -> raise
RAISE -> XX TT1
TT1 -> VARIABLE TT2
TT2 -> AAAA TT3
TT3 -> VARVAL ZZZ
S0 -> START NEWLINE | START A1 | VARIABLE E1 | VARIABLE F1 | VARIABLE G1 | VARIABLE H1 | VARIABLE I1 | QQQ U1 | PPP VARIABLE | PPP W1 | NNN X1 | NNN Y1 | EEEE B1 | DDDD C1 | LLL AA1 | LLL BB1 | III GG1 | III HH1 | HHH II1 | GGG JJ1 | DEF RETURN | FFF KK1 | FFF LL1 | FFF MM1 | AAA PP1 | XX TT1 | FFFF CSTRING
STATEMENT -> break | pass | continue
