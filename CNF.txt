START -> START NEWLINE | START A1 | VARIABLE E1 | VARIABLE F1 | VARIABLE G1 | VARIABLE H1 | VARIABLE I1 | QQQ T1 | PPP VARIABLE | PPP U1 | NNN W1 | NNN X1 | EEEE B1 | DDDD C1 | LLL Z1 | LLL AA1 | III FF1 | III GG1 | HHH HH1 | GGG II1 | DEF RETURN | FFF JJ1 | FFF KK1 | FFF LL1 | AAA OO1 | XX SS1 | FFFF CSTRING
A1 -> NEWLINE START
NEWLINE -> $
FFFF -> #
LINECOM -> FFFF CSTRING
EEEE -> "
COMMENT -> EEEE B1 | DDDD C1
B1 -> EEEE B2
B2 -> EEEE B3
B3 -> COMBODY B4
B4 -> EEEE B5
B5 -> EEEE EEEE
DDDD -> '
C1 -> DDDD C2
C2 -> DDDD C3
C3 -> COMBODY C4
C4 -> DDDD C5
C5 -> DDDD DDDD
COMBODY -> COMBODY D1 | COMBODY NEWLINE | string | CSTRING CSTRING
D1 -> NEWLINE COMBODY
CCCC -> =
ASSCLAUSE -> VARIABLE E1 | VARIABLE F1 | VARIABLE G1 | VARIABLE H1 | VARIABLE I1
E1 -> CCCC VARVAL
F1 -> OPS F2
F2 -> CCCC VARVAL
G1 -> OPS G2
G2 -> CCCC VARVAL
H1 -> OPS H2
H2 -> CCCC VARVAL
I1 -> OPS I2
I2 -> CCCC VARVAL
VARIABLE -> variable
VARVAL -> number | VARVAL J1 | VARVAL K1 | variable | EEEE P1 | DDDD Q1 | STRING R1 | True | False | BOOL L1 | BOOL M1 | YYY BOOL | VARVAL N1 | VARVAL O1 | YY PP1 | YY QQ1 | TYPE RR1
J1 -> OPS VARVAL
BBBB -> ,
K1 -> BBBB VARVAL
BOOL -> True | False | BOOL L1 | BOOL M1 | YYY BOOL | VARVAL N1 | VARVAL O1
AAAA -> and
L1 -> AAAA BOOL
ZZZ -> or
M1 -> ZZZ BOOL
YYY -> not
XXX -> is
N1 -> XXX VARVAL
O1 -> RELOPS VARVAL
WWW -> >
RELOPS -> WWW CCCC | UUU CCCC | TTT CCCC | CCCC CCCC | WWW | UUU
UUU -> <
TTT -> !
OPS -> + | - | / | * | % | ^ | UUU UUU | WWW WWW
STRING -> EEEE P1 | DDDD Q1 | STRING R1
P1 -> CSTRING EEEE
Q1 -> CSTRING DDDD
R1 -> OPS STRING
CSTRING -> string | CSTRING CSTRING
SSS -> (
RRR -> )
QQQ -> print
PRINT -> QQQ T1
T1 -> SSS T2
T2 -> VARVAL RRR
PPP -> import
IMPORT -> PPP VARIABLE | PPP U1
OOO -> as
U1 -> VARIABLE U2
U2 -> OOO VARIABLE
NNN -> from
FROM -> NNN W1 | NNN X1
W1 -> VARIABLE IMPORT
X1 -> VARIABLE X2
X2 -> PPP OPS
BODY -> BODY BODY | variable
IFBODY -> IFBODY NEWLINE | IFBODY Y1 | VARIABLE E1 | VARIABLE F1 | VARIABLE G1 | VARIABLE H1 | VARIABLE I1 | QQQ T1 | PPP VARIABLE | PPP U1 | NNN W1 | NNN X1 | EEEE B1 | DDDD C1 | LLL Z1 | LLL AA1 | KKK BB1 | KKK CC1 | JJJ DD1 | III FF1 | III GG1 | GGG II1 | DEF RETURN | FFF JJ1 | FFF KK1 | FFF LL1 | AAA OO1 | XX SS1 | FFFF CSTRING | break | pass | continue
Y1 -> NEWLINE IFBODY
MMM -> :
LLL -> if
IF -> LLL Z1 | LLL AA1
Z1 -> BOOL Z2
Z2 -> MMM Z3
Z3 -> NEWLINE IFBODY
AA1 -> SSS AA2
AA2 -> BOOL AA3
AA3 -> RRR AA4
AA4 -> MMM AA5
AA5 -> NEWLINE IFBODY
KKK -> elif
ELIF -> KKK BB1 | KKK CC1
BB1 -> BOOL BB2
BB2 -> MMM BB3
BB3 -> NEWLINE IFBODY
CC1 -> SSS CC2
CC2 -> BOOL CC3
CC3 -> RRR CC4
CC4 -> MMM CC5
CC5 -> NEWLINE IFBODY
JJJ -> else
ELSE -> JJJ DD1
DD1 -> MMM DD2
DD2 -> NEWLINE START
LOOPBODY -> LOOPBODY EE1 | VARIABLE E1 | VARIABLE F1 | VARIABLE G1 | VARIABLE H1 | VARIABLE I1 | QQQ T1 | PPP VARIABLE | PPP U1 | NNN W1 | NNN X1 | EEEE B1 | DDDD C1 | LLL Z1 | LLL AA1 | III FF1 | III GG1 | HHH HH1 | GGG II1 | DEF RETURN | FFF JJ1 | FFF KK1 | FFF LL1 | AAA OO1 | XX SS1 | FFFF CSTRING | break | pass | continue
EE1 -> NEWLINE LOOPBODY
III -> while
WHILE -> III FF1 | III GG1
FF1 -> BOOL FF2
FF2 -> MMM FF3
FF3 -> NEWLINE LOOPBODY
GG1 -> SSS GG2
GG2 -> BOOL GG3
GG3 -> RRR GG4
GG4 -> MMM GG5
GG5 -> NEWLINE LOOPBODY
HHH -> class
CLASS -> HHH HH1
HH1 -> VARIABLE HH2
HH2 -> MMM HH3
HH3 -> NEWLINE START
GGG -> def
DEF -> GGG II1 | DEF RETURN
II1 -> VARIABLE II2
II2 -> SSS II3
II3 -> VARVAL II4
II4 -> RRR II5
II5 -> MMM II6
II6 -> NEWLINE START
RETURN -> RETURN VARVAL | return
FFF -> for
EEE -> in
FOR -> FFF JJ1 | FFF KK1 | FFF LL1
JJ1 -> VARIABLE JJ2
JJ2 -> EEE JJ3
JJ3 -> STRING JJ4
JJ4 -> MMM JJ5
JJ5 -> NEWLINE LOOPBODY
KK1 -> VARIABLE KK2
KK2 -> EEE KK3
KK3 -> LIST KK4
KK4 -> MMM KK5
KK5 -> NEWLINE LOOPBODY
LL1 -> VARIABLE LL2
LL2 -> EEE LL3
LL3 -> RANGE LL4
LL4 -> MMM LL5
LL5 -> NEWLINE LOOPBODY
DDD -> [
CCC -> ]
LIST -> DDD MM1
MM1 -> VARVAL CCC
BBB -> range
RANGE -> BBB NN1
NN1 -> SSS NN2
NN2 -> VARVAL RRR
AAA -> with
ZZ -> open
WITH -> AAA OO1
OO1 -> ZZ OO2
OO2 -> SSS OO3
OO3 -> VARVAL OO4
OO4 -> RRR OO5
OO5 -> OOO OO6
OO6 -> VARIABLE OO7
OO7 -> MMM OO8
OO8 -> NEWLINE START
TYPE -> str | int | float | double
YY -> input
INPUT -> YY PP1 | YY QQ1 | TYPE RR1
PP1 -> SSS RRR
QQ1 -> SSS QQ2
QQ2 -> VARVAL RRR
RR1 -> SSS RR2
RR2 -> INPUT RRR
BREAK -> break
PASS -> pass
CONTINUE -> continue
XX -> raise
RAISE -> XX SS1
SS1 -> VARIABLE SS2
SS2 -> SSS SS3
SS3 -> VARVAL RRR
S0 -> START NEWLINE | START A1 | VARIABLE E1 | VARIABLE F1 | VARIABLE G1 | VARIABLE H1 | VARIABLE I1 | QQQ T1 | PPP VARIABLE | PPP U1 | NNN W1 | NNN X1 | EEEE B1 | DDDD C1 | LLL Z1 | LLL AA1 | III FF1 | III GG1 | HHH HH1 | GGG II1 | DEF RETURN | FFF JJ1 | FFF KK1 | FFF LL1 | AAA OO1 | XX SS1 | FFFF CSTRING
STATEMENT -> break | pass | continue
